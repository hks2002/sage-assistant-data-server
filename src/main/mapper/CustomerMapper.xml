<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.da.sageassistantserver.dao.CustomerMapper">
  <!--Open L2 Cache under Names pace: 1 Hour-->
  <cache eviction="LRU" flushInterval="3600000" readOnly="true" size="1024" />
  <select id="findCustomerByCodeOrName" resultType="com.da.sageassistantserver.model.CustomerName">
    SELECT
        BPARTNER.BPRNUM_0 AS CustomerCode,
        BPARTNER.BPRNAM_0+BPARTNER.BPRNAM_1 AS CustomerName
    FROM EXPLOIT.BPARTNER AS BPARTNER
    INNER JOIN EXPLOIT.BPCUSTOMER AS BPCUSTOMER
      ON BPARTNER.BPRNUM_0 = BPCUSTOMER.BPCNUM_0
    WHERE 
      BPARTNER.BPRNUM_0 LIKE #{CustomerCodeOrName} 
        OR BPARTNER.BPRNAM_0 LIKE #{CustomerCodeOrName} 
        OR BPARTNER.BPRNAM_1 LIKE #{CustomerCodeOrName}
    ORDER BY BPRNUM_0 ASC
    OFFSET 0 ROWS
    FETCH NEXT #{Count} ROWS ONLY
    </select>
  <select id="findCustomerDetailsByCode" resultType="com.da.sageassistantserver.model.CustomerDetails">
    SELECT 
      BPARTNER.BPRNUM_0 AS CustomerCode,
      BPARTNER.BPRNAM_0 AS CustomerName0,
      BPARTNER.BPRNAM_1 AS CustomerName1,
      BPADDRESS.BPAADDLIG_0 AS Address0,
      BPADDRESS.BPAADDLIG_1 AS Address1,
      BPADDRESS.POSCOD_0 AS PostCode,
      BPADDRESS.CRYNAM_0 AS Country,
      BPADDRESS.SAT_0 AS State,
      BPADDRESS.CTY_0 AS City,
      BPADDRESS.TEL_0 AS Tel0,
      BPADDRESS.TEL_1 AS Tel1,
      BPADDRESS.TEL_2 AS Tel2,
      BPADDRESS.TEL_3 AS Tel3,
      BPADDRESS.TEL_4 AS Tel4,
      BPADDRESS.FAX_0 AS Fax0,
      BPADDRESS.MOB_0 AS Mobile0,
      BPADDRESS.WEB_0 AS Email0,
      BPADDRESS.WEB_1 AS Email1,
      BPADDRESS.WEB_2 AS Email2,
      BPADDRESS.WEB_3 AS Email3,
      BPADDRESS.WEB_4 AS Email4,
      BPADDRESS.FCYWEB_0 AS WebSite
    FROM EXPLOIT.BPARTNER AS BPARTNER
       LEFT JOIN EXPLOIT.BPADDRESS AS BPADDRESS
         ON BPARTNER.BPRNUM_0 = BPADDRESS.BPANUM_0
    WHERE BPARTNER.BPRNUM_0 = #{CustomerCode}
    </select>
  <select id="findCustomerSumAmount" resultType="com.da.sageassistantserver.model.CustomerSummaryAmount">
  WITH 
  T0 AS (
    	SELECT
	      SORDER.SALFCY_0 AS Site,
	      SORDER.SOHTYP_0 AS OrderType,
	      SORDER.SOHNUM_0 AS OrderNO,
	      SORDER.BPCORD_0 AS CustomerCode,
	      SORDER.ORDDAT_0 AS OrderDate,
	      SORDER.ORDATI_0 AS Price,
	      SORDER.CUR_0 AS Currency,
	      SORDER.ORDATIL_0 AS LocalPrice,
	      COMPANY.ACCCUR_0 AS LocalCurrency
      FROM EXPLOIT.SORDER SORDER
      INNER JOIN COMPANY
        ON COMPANY.MAIFCY_0 = SORDER.SALFCY_0 
      WHERE 1=1
      <if test=' CustomerCode != "" '>
      AND SORDER.BPCORD_0 = #{CustomerCode}
      </if>
      AND (SORDER.ORDDAT_0 BETWEEN CONVERT(DATETIME, #{DateFrom} ,120) AND CONVERT(DATETIME, #{DateTo} ,120))
      <choose>
      <when test=' Site ==  "ALL" '>
      </when>
      <when test=' Site ==  "CHINA" '>
        AND SORDER.SALFCY_0 IN ('ZHU','HKG','YSH')
      </when>
      <otherwise>
        AND SORDER.SALFCY_0 = #{Site}
      </otherwise>
      </choose>
    ),
  T1 AS (
      SELECT
        CURDEN_0 AS Sour,
        CUR_0 AS Dest,
        CHGRAT_0 AS Rate,
        CHGSTRDAT_0 AS StartDate,
        LEAD(CHGSTRDAT_0,1,GETDATE()) OVER (PARTITION BY CUR_0,CURDEN_0 ORDER BY CHGSTRDAT_0 ASC) AS EndDate
      FROM EXPLOIT.TABCHANGE
  ),
  T2 AS (
    SELECT 
    T0.Site,
    T0.CustomerCode,
    T0.OrderNO,
    T0.OrderType,
    T0.OrderDate,
    IIF(T0.Currency = 'USD', T0.Price, T0.Price/T1.Rate) AS USD,
    T0.LocalPrice,
    T0.LocalCurrency
    FROM T0
    LEFT JOIN T1
        ON  T1.Dest = 'USD'
           AND T1.Sour = T0.Currency
           AND T0.OrderDate BETWEEN T1.StartDate AND T1.EndDate
 )
 
  SELECT DISTINCT
    T2.Site,
    T2.CustomerCode,
    T2.OrderType,
    <choose>
      <when test=' Interval == "Month" and CustomerCode !="" '>
      FORMAT(Year(T2.OrderDate), '0000') + '-' + FORMAT(MONTH(T2.OrderDate), '00') AS Target,
      ROUND(SUM(T2.USD) OVER(PARTITION BY T2.Site, T2.CustomerCode, T2.OrderType, FORMAT(Year(T2.OrderDate), '0000') + '-' + FORMAT(MONTH(T2.OrderDate), '00')),0) AS SumUSDTarget,
      ROUND(SUM(T2.LocalPrice) OVER(PARTITION BY T2.Site, T2.CustomerCode, T2.OrderType, FORMAT(Year(T2.OrderDate), '0000') + '-' + FORMAT(MONTH(T2.OrderDate), '00')),0) AS SumLocalTarget,
      </when>
      <when test=' Interval == "Month" and CustomerCode =="" '>
      FORMAT(Year(T2.OrderDate), '0000') + '-' + FORMAT(MONTH(T2.OrderDate), '00') AS Target,
      ROUND(SUM(T2.USD) OVER(PARTITION BY T2.Site, T2.OrderType, FORMAT(Year(T2.OrderDate), '0000') + '-' + FORMAT(MONTH(T2.OrderDate), '00')),0) AS SumUSDTarget,
      ROUND(SUM(T2.LocalPrice) OVER(PARTITION BY T2.Site, T2.OrderType, FORMAT(Year(T2.OrderDate), '0000') + '-' + FORMAT(MONTH(T2.OrderDate), '00')),0) AS SumLocalTarget,
      </when>
      <when test=' Interval == "Year" and CustomerCode !="" '>
      FORMAT(Year(T2.OrderDate), '0000') AS Target,
      ROUND(SUM(T2.USD) OVER(PARTITION BY T2.Site, T2.CustomerCode, T2.OrderType, FORMAT(Year(T2.OrderDate), '0000')),0) AS SumUSDTarget,
      ROUND(SUM(T2.LocalPrice) OVER(PARTITION BY T2.Site, T2.CustomerCode, T2.OrderType, FORMAT(Year(T2.OrderDate), '0000')),0) AS SumLocalTarget,
      </when>
      <when test=' Interval == "Year" and CustomerCode =="" '>
      FORMAT(Year(T2.OrderDate), '0000') AS Target,
      ROUND(SUM(T2.USD) OVER(PARTITION BY T2.Site, T2.OrderType, FORMAT(Year(T2.OrderDate), '0000')),0) AS SumUSDTarget,
      ROUND(SUM(T2.LocalPrice) OVER(PARTITION BY T2.Site, T2.OrderType, FORMAT(Year(T2.OrderDate), '0000')),0) AS SumLocalTarget,
      </when>
      <otherwise>
      FORMAT(Year(T2.OrderDate), '0000') AS Target,
      ROUND(SUM(T2.USD) OVER(PARTITION BY T2.Site, T2.OrderType, FORMAT(Year(T2.OrderDate), '0000')),0) AS SumUSDTarget,
      ROUND(SUM(T2.LocalPrice) OVER(PARTITION BY T2.Site, T2.OrderType, FORMAT(Year(T2.OrderDate), '0000')),0) AS SumLocalTarget,
      </otherwise>
    </choose>
    T2.LocalCurrency
  FROM T2
  ORDER BY 
     Target ASC
  </select>
  <select id="findCustomerOrdersCnt" resultType="java.lang.Integer">
  WITH T0 AS (
  SELECT DISTINCT
    SORDERQ.SALFCY_0 AS Site,
    SORDERQ.BPCORD_0 AS CustomerCode,
    SORDERQ.SOHNUM_0 AS OrderNO,
    SORDERQ.YSOH_PJT_0 AS ProjectNO,
    SORDERQ.ITMREF_0 AS PN
  FROM EXPLOIT.SORDERQ AS SORDERQ
     LEFT JOIN EXPLOIT.SORDER AS SORDER
        ON SORDER.SOHNUM_0 = SORDERQ.SOHNUM_0
  WHERE 1=1
     AND SORDERQ.ORDDAT_0 BETWEEN CONVERT(datetime, #{DateFrom} ,120) AND CONVERT(datetime, #{DateTo} ,120)
     <if test=' CustomerCode != "" '>
     AND SORDERQ.BPCORD_0 = #{CustomerCode}
     </if>

    <choose>
    <when test=' Site == "ALL" '>
    </when>
    <when test=' Site == "CHINA" '>
      AND SORDERQ.SALFCY_0 IN ('ZHU','HKG','YSH')
    </when>
    <otherwise>
      AND SORDERQ.SALFCY_0 = #{Site}
    </otherwise>
    </choose>

     <choose>
      <when test='  OrderStatus == "ALL" '>
      </when>
      <when test=' OrderStatus == "OPEN" '>
        AND SORDER.ORDSTA_0 = 1
      </when>
      <when test=' OrderStatus == "CLOSED" '>
        AND SORDER.ORDSTA_0 = 2
      </when>
      <otherwise>
         AND 1=2 
      </otherwise>
      </choose>
  )

  SELECT 
   COUNT(1)
  FROM T0
  </select>
  <select id="findCustomerOrders" resultType="com.da.sageassistantserver.model.CustomerOrder">
  WITH T0 AS (
  SELECT DISTINCT
    ROW_NUMBER() OVER (ORDER BY SORDERQ.ORDDAT_0 ASC) AS ItemNO,
    SORDERQ.SALFCY_0 AS Site,
    SORDERQ.BPCORD_0 AS CustomerCode,
    SORDERQ.SOHNUM_0 AS OrderNO,
    SORDERQ.YSOH_PJT_0 AS ProjectNO,
    SORDERQ.ITMREF_0 AS PN,
    RTRIM(SORDERP.ITMDES1_0 +' '+ SORDERP.ITMDES2_0 +' '+ SORDERP.ITMDES3_0) AS Description,
    SORDERQ.QTYSTU_0 AS Qty,
    SORDERQ.ORDDAT_0 AS OrderDate,
    SORDERQ.DEMDLVDAT_0 AS OrderRequestDate,
    SORDERQ.YSOQ_DLIVP_0 AS OrderPlanedDate,
    MAX(SDELIVERYD.SDHNUM_0) OVER (PARTITION BY SORDERQ.SOHNUM_0, SORDERQ.SOPLIN_0) AS LastDeliveryNO,
    SUM(SDELIVERYD.QTYSTU_0) OVER (PARTITION BY SORDERQ.SOHNUM_0, SORDERQ.SOPLIN_0) AS TotalDeliveryQty,
    MAX(SDELIVERYD.SHIDAT_0) OVER (PARTITION BY SORDERQ.SOHNUM_0, SORDERQ.SOPLIN_0) AS LastShipDate
  FROM EXPLOIT.SORDERQ AS SORDERQ
     LEFT JOIN EXPLOIT.SORDER AS SORDER
        ON SORDER.SOHNUM_0 = SORDERQ.SOHNUM_0
     LEFT JOIN EXPLOIT.SORDERP AS SORDERP
        ON SORDERP.SOHNUM_0 = SORDERQ.SOHNUM_0
          AND SORDERP.SOPLIN_0 = SORDERQ.SOPLIN_0
     LEFT JOIN EXPLOIT.SDELIVERYD SDELIVERYD
        ON SORDERQ.SOHNUM_0 = SDELIVERYD.SOHNUM_0
          AND SDELIVERYD.SOPLIN_0 = SORDERQ.SOPLIN_0
  WHERE 1=1
     AND SORDERQ.ORDDAT_0 BETWEEN CONVERT(datetime, #{DateFrom} ,120) AND CONVERT(datetime, #{DateTo} ,120)
     <if test=' CustomerCode != "" '>
     AND SORDERQ.BPCORD_0 = #{CustomerCode}
     </if>

    <choose>
    <when test=' Site == "ALL" '>
    </when>
    <when test=' Site == "CHINA" '>
      AND SORDERQ.SALFCY_0 IN ('ZHU','HKG','YSH')
    </when>
    <otherwise>
      AND SORDERQ.SALFCY_0 = #{Site}
    </otherwise>
    </choose>

     <choose>
      <when test='  OrderStatus == "ALL" '>
      </when>
      <when test=' OrderStatus == "OPEN" '>
        AND SORDER.ORDSTA_0 = 1
      </when>
      <when test=' OrderStatus == "CLOSED" '>
        AND SORDER.ORDSTA_0 = 2
      </when>
      <otherwise>
         AND 1=2 
      </otherwise>
      </choose>
     
     ORDER BY ItemNO ASC
     OFFSET #{Offset} ROWS
     FETCH NEXT #{Limit} ROWS ONLY
  )

    SELECT 
    T0.*,
    IIF(T0.OrderPlanedDate > GETDATE(), DATEDIFF(day, T0.OrderPlanedDate, GETDATE()),
        IIF(T0.LastDeliveryNO IS NULL, DATEDIFF(day, T0.OrderPlanedDate, GETDATE()),
            IIF(T0.Qty > T0.TotalDeliveryQty, DATEDIFF(day, T0.OrderPlanedDate, getDate()),
                DATEDIFF(day, T0.OrderPlanedDate, T0.LastShipDate)
              )
           )
       ) AS DaysDelay
  FROM T0
  </select>
  <select id="findCustomerOTD" resultType="com.da.sageassistantserver.model.CustomerOTD">
  WITH T0 AS (
  SELECT DISTINCT
    SORDERQ.SALFCY_0 AS Site,
    SORDERQ.BPCORD_0 AS CustomerCode,
    SORDERQ.SOHNUM_0 AS OrderNO,
    SORDERQ.YSOH_PJT_0 AS ProjectNO,
    SORDERQ.QTYSTU_0 AS Qty,
    SORDERQ.ORDDAT_0 AS OrderDate,
    SORDERQ.YSOQ_DLIVP_0 AS OrderPlanedDate,
    MAX(SDELIVERYD.SDHNUM_0) OVER (PARTITION BY SORDERQ.SOHNUM_0, SORDERQ.SOPLIN_0) AS LastDeliveryNO,
    SUM(SDELIVERYD.QTYSTU_0) OVER (PARTITION BY SORDERQ.SOHNUM_0, SORDERQ.SOPLIN_0) AS TotalDeliveryQty,
    MAX(SDELIVERYD.SHIDAT_0) OVER (PARTITION BY SORDERQ.SOHNUM_0, SORDERQ.SOPLIN_0) AS LastShipDate
  FROM EXPLOIT.SORDERQ AS SORDERQ
     LEFT JOIN EXPLOIT.SORDER AS SORDER
        ON SORDER.SOHNUM_0 = SORDERQ.SOHNUM_0
     LEFT JOIN EXPLOIT.SORDERP AS SORDERP
        ON SORDERP.SOHNUM_0 = SORDERQ.SOHNUM_0
          AND SORDERP.SOPLIN_0 = SORDERQ.SOPLIN_0
     LEFT JOIN EXPLOIT.SDELIVERYD SDELIVERYD
        ON SORDERQ.SOHNUM_0 = SDELIVERYD.SOHNUM_0
          AND SDELIVERYD.SOPLIN_0 = SORDERQ.SOPLIN_0
  WHERE 1=1
     AND SORDERQ.ORDDAT_0 BETWEEN CONVERT(datetime, #{DateFrom} ,120) AND CONVERT(datetime, #{DateTo} ,120)
     <if test=' CustomerCode != "" '>
     AND SORDERQ.BPCORD_0 = #{CustomerCode}
     </if>

    <choose>
    <when test=' Site == "ALL" '>
    </when>
    <when test=' Site == "CHINA" '>
      AND SORDERQ.SALFCY_0 IN ('ZHU','HKG','YSH')
    </when>
    <otherwise>
      AND SORDERQ.SALFCY_0 = #{Site}
    </otherwise>
    </choose>

     <choose>
      <when test='  OrderStatus == "ALL" '>
      </when>
      <when test=' OrderStatus == "OPEN" '>
        AND SORDER.ORDSTA_0 = 1
      </when>
      <when test=' OrderStatus == "CLOSED" '>
        AND SORDER.ORDSTA_0 = 2
      </when>
      <otherwise>
         AND 1=2 
      </otherwise>
      </choose>
     
     ORDER BY ItemNO ASC
     OFFSET #{Offset} ROWS
     FETCH NEXT #{Limit} ROWS ONLY
  ),
  T1 AS (
    SELECT 
    T0.*,
    IIF(T0.OrderPlanedDate > GETDATE(), DATEDIFF(day, T0.OrderPlanedDate, GETDATE()),
        IIF(T0.LastDeliveryNO IS NULL, DATEDIFF(day, T0.OrderPlanedDate, GETDATE()),
            IIF(T0.Qty > T0.TotalDeliveryQty, DATEDIFF(day, T0.OrderPlanedDate, getDate()),
                DATEDIFF(day, T0.OrderPlanedDate, T0.LastShipDate)
              )
           )
       ) AS DaysDelay
  FROM T0
  WHERE 
     T0.OrderPlanedDate BETWEEN CONVERT(datetime, #{DateFrom} ,120) AND CONVERT(datetime, #{DateTo} ,120)
  ),    
  T2 AS (
      SELECT DISTINCT
      T1.Site,
      <if test=' CustomerCode != "" '>
      T1.CustomerCode,
      </if>
      <choose>
      <when test=' Interval =="Month" and CustomerCode != "" '>
      FORMAT(Year(T1.OrderPlanedDate), '0000') + '-' + FORMAT(MONTH(T1.OrderPlanedDate), '00') AS Target,
      COUNT(IIF(T1.DaysDelay>0, NULL, 1)) OVER(PARTITION BY T1.Site, T1.CustomerCode, FORMAT(Year(T1.OrderPlanedDate), '0000') + '-' +  FORMAT(MONTH(T1.OrderPlanedDate), '00')) AS OTCnt,
      COUNT(1) OVER(PARTITION BY T1.Site, T1.CustomerCode, FORMAT(Year(T1.OrderPlanedDate), '0000') + '-' +  FORMAT(MONTH(T1.OrderPlanedDate), '00')) AS AllCnt
      </when>
      <when test=' Interval =="Month" and CustomerCode = "" '>
      FORMAT(Year(T1.OrderPlanedDate), '0000') + '-' + FORMAT(MONTH(T1.OrderPlanedDate), '00') AS Target,
      COUNT(IIF(T1.DaysDelay>0, NULL, 1)) OVER(PARTITION BY T1.Site, FORMAT(Year(T1.OrderPlanedDate), '0000') + '-' +  FORMAT(MONTH(T1.OrderPlanedDate), '00')) AS OTCnt,
      COUNT(1) OVER(PARTITION BY T1.Site, FORMAT(Year(T1.OrderPlanedDate), '0000') + '-' +  FORMAT(MONTH(T1.OrderPlanedDate), '00')) AS AllCnt
      </when>
      <when test=' Interval =="Year" and CustomerCode != "" '>
      FORMAT(Year(T1.OrderPlanedDate), '0000') AS Target,
      COUNT(IIF(T1.DaysDelay>0,NULL,1)) OVER(PARTITION BY T1.Site, T1.CustomerCode, FORMAT(Year(T1.OrderPlanedDate), '0000')) AS OTCnt,
      COUNT(1) OVER(PARTITION BY T1.Site, T1.CustomerCode, FORMAT(Year(T1.OrderPlanedDate), '0000')) AS AllCnt
      </when>
      <when test=' Interval =="Year" and CustomerCode = "" '>
      FORMAT(Year(T1.OrderPlanedDate), '0000') AS Target,
      COUNT(IIF(T1.DaysDelay>0,NULL,1)) OVER(PARTITION BY T1.Site, FORMAT(Year(T1.OrderPlanedDate), '0000')) AS OTCnt,
      COUNT(1) OVER(PARTITION BY T1.Site, FORMAT(Year(T1.OrderPlanedDate), '0000')) AS AllCnt
      </when>
      <otherwise>
      FORMAT(Year(T1.OrderPlanedDate), '0000') AS Target,
      COUNT(IIF(T1.DaysDelay>0,NULL,1)) OVER(PARTITION BY T1.Site, FORMAT(Year(T1.OrderPlanedDate), '0000')) AS OTCnt,
      COUNT(1) OVER(PARTITION BY T1.Site, FORMAT(Year(T1.OrderPlanedDate), '0000')) AS AllCnt
      </otherwise>
    </choose>
    FROM T1
    )

    SELECT 
      T2.*,
      ROUND(T2.OTCnt*100.0/T2.AllCnt,2) AS OTD 
    FROM T2
      ORDER BY 
        Target ASC
  </select>
</mapper>